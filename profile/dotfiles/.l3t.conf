[l3t]
auth-token = gfigueira:7338f02e0cd647fc347f88385c09eb6a0c1bac1c
bugs-dir = ~/tmp

incident-oneline = #import datetime as dt
        #import os, time
        #if $os.path.exists("/dev/shm/next") and ($time.time() - $os.path.getmtime("/dev/shm/next") < 60)
        #set next = open("/dev/shm/next").read().strip()
        #else
        #import subprocess
        #set cmdline = ["l3n", "-o", "l3t.incident-oneline=$id"]
        ## FIXME tmpfile
        #set next = subprocess.check_output($cmdline).strip()
        #set foobar = open("/dev/shm/next", "w").write($next)
        #end if
        ## FIXME this is getting ugly:
        #set $flags_part = $flags and ", F" or ""
        #set $c = ""
        #set $i = ""
        #if $unreliable_priority in ("P1", "P0")
        #set $c = $C(196)
        #elif $state == "new"
        #set $delta = $dt.datetime.now() - $ts_new
        #if $delta.days >= 7
        #set $i = u", 7+"
        #set $c = $C(196)
        #elif $delta.days >= 3
        #set $c = $C(206)
        #set $i = u", 3+"
        #end if
        #end if
        #set N = " __NEXT__" if $next == $str($id) else ""
        ${c}L3:$id/$bug_id $bug_summary ($unreliable_priority, $product_category, $bug.state, $customer_domain$flags_part$i)$C()$C(227)$N$C()

[l3n]
watch-product-category = CaaSP

[bugzilla]
sort-comments=nope
bug-template = [$C(78)$bug_id$C()] $C(41)$short_desc$C()
	#set needinfo = ", ".join(f.get("requestee", "anyone") for f in $flags if f["name"] == "needinfo")
	Status: $bug_status | Needinfo: $needinfo | Assignee: $assigned_to
	#if "P1" in $priority or "P0" in $priority
	#set $p_color = $C(196)
	#end if
	#set $p_color = ""
	Priority: $p_color$priority$C() | Whiteboard: $status_whiteboard
	Product: $product | Resolution: $resolution
	#from datetime import datetime
	#for $incident in $incidents
	#set $sleeping = ($C(226) + "Zzz" + $C()) if $incident.sleep_until > $datetime.now() else ""
	${C(226)}$incident.request_type:$incident.id$C() $incident.customer_domain $incident.state $sleeping$incident.ts_finished
	#end for
	#set $cc = ", ".join($cc_list)
	#echo "\n"
	Cc-List: $cc
	#if $bug_file_loc
	URL: $bug_file_loc
	#end if
	#if $attachments
	#echo "\n"
	Attachments:
	#for $attachment in $attachments
	#if $attachment["isobsolete"]
	#continue
	#else
	- $attachment["attachid"]: $attachment["filename"] ($attachment["desc"]) from $attachment["attacher"]
	#end if
	#end for
	#end if
	#echo "\n"
	#set $annotated = $list($enumerate($comments))
	#if $nlatest is not None
	#set $annotated = $annotated[-$nlatest:]
	#end if
	#if $reverse
	#set $annotated = $annotated[::-1]
	#end if
	#for $count, $comment in $annotated
	#set $private = " (private)" if $comment.get("private") else ""
	$C(42)=========== Comment $count from $comment["who"] ($comment["bug_when"].isoformat())$C()$private
	#if $comment.get("thetext")
	$w($comment["thetext"])
	#end if
	#echo "\n"
	#end for
