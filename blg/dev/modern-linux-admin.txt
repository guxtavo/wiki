The modern Linux admin and lessons learned from the high-end Android market

About the Author: Gustavo (capcom) Figueira is a Kernel Software Engineer,
avid performance troubleshotter and Aerospace Geek. Along with his job at SuSE
he also works on the RPS-1 project, an Raspberry Pi CubeSat loaded with NASA's
cFS (Core Flight System).

When designing a deterministic system without a Real Time Kernel, the
isolation of CPUs for application, which is why you have bought the
subscription for Enterpirse Linux Support and an expensive machine was for, is
a common practice in performance tuning.

Not all of your CPU cycles will be spent on userspace. If you have
synchronization problems, memory contention or have delays in network, storage
or any other type of interrupt, CPU cycles will be spent dealing with this,
and you will see increase in %system CPU.

When you have synchronization issues, you will see an increased use of futexes
in user space, or other kernel-space synchronization techniques like
spin-locks, futexes and so on.

How much memory can you move in micro benchmark? Can your application do the
same? Is your memory speed the bottleneck?  Do you have delays in network or 
storage, or both? 

Now let's dive into what ARM is baking into the newest SoC's. Here are the 
CPU specs for the Samsumg Galaxy S8, which was released in March 2017, a
high-end Android Phone, running kernel 3.10:

  Qualcomm MSM8998 Snapdragon 835 - US model
  Octa-core (4x2.35 GHz Kryo & 4x1.9 GHz Kryo) 

  Exynos 8895 Octa - EMEA model
  Octa-core (4x2.3 GHz & 4x1.7 GHz)

* - http://www.gsmarena.com/samsung_galaxy_s8-8161.php

Samsumg uses it's own SoC, the Exynos for the EMEA market, where in the US,
Qualcomm delivers the Snapdragon SoC. But in both cases, the octa-core CPUs
have half of the cores running in a lower speed.

Digging the Nexus 5X CPU architecture, I found the following:

  In order to save power, Google has introduced what it calls an 'Android Sensor
  Hub'. It is a secondary low-power processor whose purpose is to run
  activity-recognition algorithms by directly monitoring the device's
  accelerometer, gyroscope, fingerprint reader, and camera sensors, allowing the
  main CPU to remain inactive until something requires its attention.

* - https://en.wikipedia.org/wiki/Nexus_5X

Nexus 5X's SoC is a Qualcomm MSM8992 (808), it's a ARMv8-A, 4+2 hexa-core with 
(4x1.4 GHz Cortex-A53 & 2x1.8 GHz Cortex-A57) CPU. It uses Global Task 
Scheduling, also know as heteregeneous multi-processing (HMP), which is how
the Linux Scheduler preempts the processes:

  Big.Little architecture is heterogeneous multi-processing (HMP), which enables
  the use of all physical cores at the same time. Threads with high priority or
  computational intensity can in this case be allocated to the "Big" cores while
  threads with less priority or less computational intensity, such as background
  tasks, can be performed by the "Little" cores.

* - https://en.wikipedia.org/wiki/ARM_big.LITTLE

We can say that the lower power cores are responsible for high priority
interrupts from various devices. It is the same principle applied to IRQ
isollation on busy systems. The system administrator deliberately assigns the
Network and the network-intensive application to the same numa node, thus
taking advantage of data locality. If the system is not so IO-bound, the block
devices and system daemons are then assigned to a different numa node, so the
logging, remote access and local daemons runs on different CPUs than the ones
running the application.

The power savings gained in such architecture will benefity power-hungry
mobile users, but inside the data center, where power is unlimted, this can
mean lower latencies.

As virtualization becomes common practice, we can see the same tuning being
applied to NFV, like in the Snabb project, were data planes are freed from
interrupt handling to avoid lantency spikes:

  Normally Linux will handle hardware interrupts on the first core on a socket.
  In our case above, that would be cores 0 and 6. That works well with our
  isolcpus setting as well: interrupts like timers and so on will only get
  delivered to the cores which Linux is managing already, and won't interrupt
  the data planes.

* - https://github.com/snabbco/snabb/blob/master/src/doc/performance-tuning.md

--

Not all workloads will behave as a Android Application, but it is nice to seee
how the mobile industry is tackling it's challenges and many generalizations
can be made between mobiles and the data center.

--
Kind regards,
Gustavo (capcom) Figueira

capcom - capsule communicator
Nexus 5X energy use

devices - 56%
android - 29%
apps    - 15%

devices 1165 56%
----------------
screen 995
bluetooth 67
mobile standby 60
phone idle 43

android and google ecosystem - 604 29%
--------------------------------------
android system 285
android os 246
google services 73

apps - 313 - 15%
----------------
chrome 94
reddit 70
mars mars 56
google play music 51
youtube 42

total 2082
